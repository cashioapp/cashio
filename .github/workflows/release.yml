name: Release

on:
  workflow_dispatch: {}
  push:
    tags:
      - "v*.*.*"

env:
  CARGO_TERM_COLOR: always
  SOLANA_VERSION: "1.9.9"
  RUST_TOOLCHAIN: nightly-2021-12-23
  NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

jobs:
  release-sdk:
    runs-on: ubuntu-latest
    name: Release SDK on NPM
    steps:
      - uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v16
      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: cash
          extraPullNames: quarry, saber
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Setup Node
        uses: actions/setup-node@v3

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install Yarn dependencies
        run: yarn install
      - name: Parse IDLs
        run: nix shell .#ci --command yarn idl:generate
      - run: yarn build
      - run: |
          echo 'npmAuthToken: "${NPM_PUBLISH_TOKEN}"' >> .yarnrc.yml
      - name: Publish
        run: yarn npm publish

  release-crate:
    runs-on: ubuntu-latest
    name: Release crate on crates.io
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust nightly
        uses: actions-rs/toolchain@v1
        with:
          override: true
          profile: minimal
          toolchain: ${{ env.RUST_TOOLCHAIN }}
      - uses: Swatinem/rust-cache@v1

      - uses: cachix/install-nix-action@v16
      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: cash
          extraPullNames: quarry, saber
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Publish crates
        run: nix shell .#ci --command cargo ws publish --from-git --yes --skip-published --token ${{ secrets.CARGO_PUBLISH_TOKEN }}

  release-binaries:
    runs-on: ubuntu-latest
    name: Release verifiable binaries
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v16
      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: cash
          extraPullNames: quarry, saber
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Build programs
        run: nix shell .#ci --command anchor build -v
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/deploy/*
            target/idl/*
            target/verifiable/*

  site:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: cachix/install-nix-action@v16
      - name: Setup Cachix
        uses: cachix/cachix-action@v10
        with:
          name: cash
          extraPullNames: quarry, saber
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
      - name: Yarn Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-modules-

      - name: Install Yarn dependencies
        run: yarn install
      - name: Parse IDLs
        run: nix shell .#ci --command yarn idl:generate
      - run: yarn docs:generate
      - run: cp -R images/ site/

      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4.2.5
        with:
          branch: gh-pages
          folder: site
